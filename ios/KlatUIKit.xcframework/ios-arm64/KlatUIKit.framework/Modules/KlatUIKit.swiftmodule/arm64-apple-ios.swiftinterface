// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name KlatUIKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import DeveloperToolsSupport
import Foundation
@_exported import KlatUIKit
import Photos
import Swift
import SwiftUI
import TalkPlus
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc @_Concurrency.MainActor @preconcurrency public class KlatChannelListViewController : KlatUIKit.KlatBaseViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension KlatUIKit.KlatChannelListViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, trailingSwipeActionsConfigurationForRowAt indexPath: Foundation.IndexPath) -> UIKit.UISwipeActionsConfiguration?
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers open class KlatChannelListViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers open class KlatMessageActionViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
@_hasMissingDesignatedInitializers open class KlatMemberInfoViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
@_hasMissingDesignatedInitializers open class KlatChatMessageViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class KlatUIKitSDK {
  public static var versionString: Swift.String {
    get
  }
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor @preconcurrency public class KlatChatMessageViewController : KlatUIKit.KlatBaseViewController {
  @objc @_Concurrency.MainActor @preconcurrency public var chatChannel: Swift.AnyObject?
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @objc deinit
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
}
extension KlatUIKit.KlatChatMessageViewController : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForRowAt indexPath: Foundation.IndexPath) -> CoreFoundation.CGFloat
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
extension KlatUIKit.KlatChatMessageViewController : UIKit.UIScrollViewDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func scrollViewDidEndDragging(_ scrollView: UIKit.UIScrollView, willDecelerate decelerate: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func scrollViewDidEndDecelerating(_ scrollView: UIKit.UIScrollView)
}
extension KlatUIKit.KlatChatMessageViewController : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func textViewDidChange(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func textViewDidEndEditing(_ textView: UIKit.UITextView)
}
extension KlatUIKit.KlatChatMessageViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func imagePickerController(_ picker: UIKit.UIImagePickerController, didFinishPickingMediaWithInfo info: [UIKit.UIImagePickerController.InfoKey : Any])
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers open class KlatSearchChannelViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency open class KlatBaseViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension KlatUIKit.KlatBaseViewController : UIKit.UIImagePickerControllerDelegate, UIKit.UINavigationControllerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func imagePickerControllerDidCancel(_ picker: UIKit.UIImagePickerController)
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func imagePickerController(_ picker: UIKit.UIImagePickerController, didFinishPickingMediaWithInfo info: [UIKit.UIImagePickerController.InfoKey : Any])
}
extension KlatUIKit.KlatBaseViewController : UIKit.UIGestureRecognizerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc dynamic public func gestureRecognizerShouldBegin(_ gestureRecognizer: UIKit.UIGestureRecognizer) -> Swift.Bool
}
public enum KlatError : Swift.Error, Foundation.LocalizedError {
  case invalidChannel
  case invalidMessage
  case invalidUser
  case invalidImage
  case unknownError
  case paramsBindingError
  case invalidParams
  case internalServerError
  case unauthorized
  case loginRequired
  case tooManyRequests
  case invalidMetaData
  case deactivatedApp
  case invalidPrivateData
  case invalidPrivateTag
  case invalidMemberInfo
  case channelOwnerNotFound
  case channelMemberNotFound
  case channelIdAlreadyTaken
  case channelNotFound
  case reuseChannelMembersDoNotMatch
  case userNotChannelMember
  case channelUpdateNotAuthorized
  case cannotRemoveChannelOwner
  case alreadyMember
  case removeUserNotMember
  case banUserNotMember
  case cannotJoinPrivateChannel
  case invitationCodeRequired
  case invitationCodeCannotBeEmpty
  case wrongInvitationCode
  case channelNotInvitationOnlyType
  case cannotBanOwnerFromChannel
  case cannotAddBannedUser
  case bannedFromChannel
  case cannotCreateChannelWithBlockedMember
  case cannotCreateChannelWhenBlockedByMember
  case cannotAddBlockedMember
  case cannotAddMemberWhenBlockedByMember
  case cannotJoinChannelBlockedByOwner
  case cannotJoinChannelBlockedOwner
  case cannotSendMessageInFrozenChannel
  case mentionedUserDoesNotExist
  case mutedInChannel
  case cannotMuteChannelOwner
  case maxChannelMemberCountExceeded
  case alreadyChannelOwner
  case notChannelOwner
  case sessionNotFound
  case sessionTokenInvalid
  case userNotFound
  case userIDTaken
  case appNotFound
  case anonymousLoginNotAllowed
  case wrongPassword
  case invalidLoginToken
  case deactivatedUser
  case senderNotChannelMember
  case msgSizeLimitExceeded
  case bothMsgTextDataMissing
  case cannotBlockSelf
  case cannotUnblockSelf
  case userNotBlocked
  case fileUploadFail
  case fileSizeLimitExceeded
  public static func convert(errorCode: Swift.Int, error: (any Swift.Error)?) -> (any Swift.Error)?
  public var errorDescription: Swift.String? {
    get
  }
  public static func == (a: KlatUIKit.KlatError, b: KlatUIKit.KlatError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers open class KlatBaseViewModel {
  @objc deinit
}
extension KlatUIKit.KlatBaseViewModel {
  @objc dynamic public func handleMemberLeft(_ notification: Foundation.Notification)
}
@_hasMissingDesignatedInitializers open class KlatMemberListViewModel : KlatUIKit.KlatBaseViewModel {
  @objc deinit
}
extension KlatUIKit.KlatError : Swift.Equatable {}
extension KlatUIKit.KlatError : Swift.Hashable {}
